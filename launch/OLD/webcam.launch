<launch>
  <arg name="rgbcameraframe" default="rgb_camera_frame" />
  <arg name="viewimage" default="false" />
  <arg name="videoserver" default="true" />
  <arg name="webcam" default="false" />
  <arg name="device" default="/dev/video0" />
  <arg name="format" default="yuyv" />  <!-- yuyv, mjpeg -->
  <arg name="image_width" default="640" />
  <arg name="image_height" default="480" />
   <group if="$(arg webcam)">
  <node pkg="usb_cam" type="usb_cam_node" name="usbcam" output="log" >
    <rosparam file="config/usbcam.yaml" command="load" />

    <param name="video_device" value="$(arg device)" />
    <param name="camera_frame_id" value="$(arg rgbcameraframe)" />
    <param name="pixel_format" value="$(arg format)" />
    <param name="image_width" value="$(arg image_width)" />
    <param name="image_height" value="$(arg image_height)" />

    <remap from="/usbcam/image_raw" to="/rgb/image_raw" />
    <remap from="/usbcam/camera_info" to="/rgb/camera_info" />
  </node>

  <!-- transforms -->
  <node pkg="thin_state_publisher" type="thin_state_publisher_node" name="state_pub_usbcam"
	    args="-odom_topic odom -odom_frame_id none $(env MARRTINO_APPS_HOME)/camera/config/transforms.txt" output="screen">
  </node>
  </group>
  <group if="$(arg viewimage)"> 
  <node name="image_view" pkg="image_view" type="image_view" respawn="false" output="screen">
    <remap from="image" to="/rgb/image_raw"/>
    <param name="autosize" value="true" />
  </node>
  </group>

  <group if="$(arg videoserver)">
  <node name="web_video_server" pkg="web_video_server" type="web_video_server" respawn="false" output="screen">
    <param name="port" value="29090" />
  </node>
  </group>


</launch>

